{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabId","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","index","title","classNames","href","onClick","content","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAC,GAI/B,IACmBC,EAJxBC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAQMC,GANkBJ,EAMWE,EALhBD,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOP,MAE1BC,EAAK,IAK1B,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,EAAKI,GACd,IAAQH,EAAcD,EAAdC,GAAII,EAAUL,EAAVK,MAEZ,OACE,oBACE,UAAQ,MAERH,UACEI,IAAW,CACT,YAAaL,IAAOH,EAAYG,KALtC,SASE,mBACEM,KAAI,WAAMN,GACV,UAAQ,UACRO,QAAS,WACHP,IAAOL,GACTC,EAAcF,EAAKS,KALzB,SASGC,KAhBEJ,UAwBf,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYW,cCnDRd,EAAO,CAClB,CAAEM,GAAI,QAASI,MAAO,QAASI,QAAS,eACxC,CAAER,GAAI,QAASI,MAAO,QAASI,QAAS,eACxC,CAAER,GAAI,QAASI,MAAO,QAASI,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAAShB,EAAK,IAApD,mBAAOG,EAAP,KAAoBc,EAApB,KACMhB,EAAgBE,EAAYG,GAElC,OACE,sBAAKC,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBJ,EAAYO,SAElC,cAAC,EAAD,CACEV,KAAMA,EACNC,cAAeA,EACfC,cAAe,SAAAG,GAAG,OAAIY,EAAeZ,UCrB7Ca,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3445a929.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ninterface Props {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const getSelectedTab = (tabId: string): Tab => {\n    const foundTab = tabs.find(tab => tab.id === tabId);\n\n    return foundTab || tabs[0];\n  };\n\n  const selectedTab = getSelectedTab(selectedTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab, index) => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                data-cy=\"Tab\"\n                key={id}\n                className={\n                  classNames({\n                    'is-active': id === selectedTab.id,\n                  })\n                }\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (id !== selectedTabId) {\n                      onTabSelected(tabs[index]);\n                    }\n                  }}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n  const selectedTabId = selectedTab.id;\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={tab => setSelectedTab(tab)}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}